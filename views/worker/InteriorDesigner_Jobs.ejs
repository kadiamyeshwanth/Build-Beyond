<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interior Designer Job Offers</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #1abc9c;
            --background-color: #f5f7fa;
            --card-bg: #ffffff;
            --text-color: #333333;
            --text-light: #7f8c8d;
            --border-color: #e0e0e0;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: "Poppins", sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
            height: 100vh;
            overflow: hidden;
        }

        .navbar {
            position: sticky;
            top: 0;
            left: 0;
            width: 100%;
            height: 60px;
            background-color: #121639;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        .navbar-left {
            font-weight: bold;
            font-size: 1.2rem;
        }

        .navbar-middle {
            display: flex;
            gap: 20px;
        }

        .navbar-middle a {
            color: white;
            text-decoration: none;
            padding: 5px 10px;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .navbar-middle a:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .navbar-right {
            display: flex;
            align-items: center;
        }

        .profile-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #6c5ce7;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
        }

        .profile-icon svg {
            width: 24px;
            height: 24px;
            fill: white;
        }

        .container {
            height: calc(100vh - 60px);
            padding: 20px;
            overflow: hidden;
        }

        .job-dashboard {
            display: flex;
            height: 100%;
            gap: 30px;
            max-width: 1600px;
            margin: 0 auto;
        }

        .job-list-panel {
            flex: 0 0 380px;
            background-color: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            display: flex;
            flex-direction: column;
            overflow: hidden;
            height: 100%;
        }

        .search-container {
            padding: 20px;
            border-bottom: 1px solid var(--border-color);
            position: relative;
            flex-shrink: 0;
        }

        .search-container input {
            width: 100%;
            padding: 12px 15px 12px 40px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 14px;
            transition: var(--transition);
        }

        .search-container input:focus {
            outline: none;
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }

        .search-icon {
            position: absolute;
            left: 35px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-light);
        }

        .jobs-container {
            overflow-y: auto;
            padding: 15px;
            flex-grow: 1;
        }

        .job-card {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 10px;
            padding: 18px;
            margin-bottom: 15px;
            cursor: pointer;
            transition: var(--transition);
        }

        .job-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border-left: 4px solid var(--accent-color);
        }

        .job-card.active {
            border-left: 4px solid var(--secondary-color);
            background-color: rgba(52, 152, 219, 0.05);
        }

        .job-type {
            display: inline-block;
            font-size: 12px;
            font-weight: 600;
            padding: 4px 10px;
            border-radius: 12px;
            margin-bottom: 10px;
        }

        .job-type.interior {
            background-color: #fce4ec;
            color: #c2185b;
        }

        .job-title {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 8px;
            color: var(--primary-color);
        }

        .job-budget {
            font-size: 14px;
            color: var(--text-light);
            margin-bottom: 10px;
        }

        .job-summary {
            font-size: 14px;
            color: var(--text-color);
            display: -webkit-box;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .job-details-panel {
            flex: 1;
            background-color: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            padding: 30px;
            position: relative;
            overflow-y: auto;
            height: 100%;
        }

        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            color: var(--text-light);
            text-align: center;
        }

        .empty-icon {
            font-size: 60px;
            margin-bottom: 20px;
            opacity: 0.3;
        }

        .empty-state h2 {
            font-size: 24px;
            font-weight: 500;
            margin-bottom: 10px;
        }

        .empty-state p {
            font-size: 16px;
            max-width: 300px;
        }

        .job-details-content {
            animation: fadeIn 0.3s ease-in-out;
            display: none;
        }

        .job-details-content.active {
            display: block;
        }

        .details-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--border-color);
        }

        .details-header-left h2 {
            font-size: 24px;
            margin-bottom: 10px;
            color: var(--primary-color);
        }

        .details-header-right {
            text-align: right;
        }

        .details-section {
            margin-bottom: 30px;
        }

        .details-section h3 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .details-section h3 i {
            color: var(--secondary-color);
        }

        .details-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .detail-item {
            margin-bottom: 15px;
        }

        .detail-label {
            font-size: 14px;
            font-weight: 600;
            color: var(--text-light);
            margin-bottom: 5px;
        }

        .detail-value {
            font-size: 16px;
        }

        .reference-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .reference-image {
            height: 120px;
            border-radius: 8px;
            background-size: cover;
            background-position: center;
            cursor: pointer;
            transition: var(--transition);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .reference-image:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        .special-features {
            background-color: #f9f9f9;
            padding: 18px;
            border-radius: 8px;
            margin-top: 15px;
            border-left: 3px solid var(--accent-color);
        }

        .job-action-buttons {
            display: flex;
            gap: 15px;
            margin-top: 40px;
        }

        .job-action-button {
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            border: none;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .accept-button {
            background-color: var(--accent-color);
            color: white;
        }

        .accept-button:hover {
            background-color: #16a085;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        .deny-button {
            background-color: #e74c3c;
            color: white;
        }

        .deny-button:hover {
            background-color: #c0392b;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive adjustments */
        @media (max-width: 1200px) {
            .job-list-panel {
                flex: 0 0 340px;
            }
        }

        @media (max-width: 992px) {
            .job-dashboard {
                flex-direction: column;
                height: auto;
            }
            
            .job-list-panel, .job-details-panel {
                height: 500px;
                width: 100%;
            }
            
            body {
                height: auto;
                overflow: auto;
            }
            
            .container {
                height: auto;
                overflow: visible;
            }
        }

        @media (max-width: 768px) {
            .details-grid {
                grid-template-columns: 1fr;
            }
            
            .navbar-middle {
                display: none;
            }
        }
    </style>
</head>
<body>
    <%- include('worker_navbar') %>
    <main class="container">
        <div class="job-dashboard">
            <section class="job-list-panel">
                <div class="search-container">
                    <input type="text" id="searchInput" placeholder="Search job offers...">
                    <i class="fas fa-search search-icon"></i>
                </div>
                <div class="jobs-container" id="jobList">
                    <% if (!jobs || jobs.length === 0) { %>
                        <p>No job offers available.</p>
                    <% } else { %>
                        <% jobs.forEach(job => { %>
                            <div class="job-card" data-id="<%= job._id %>">
                                <span class="job-type interior"><%= job.roomType || 'Interior' %></span>
                                <h3 class="job-title"><%= job.projectName || 'Untitled Project' %></h3>
                                <p class="job-budget"><%= job.budget || 'Budget not specified' %></p>
                                <p class="job-summary"><%= job.projectDescription || 'No description provided' %></p>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </section>
            <section class="job-details-panel" id="jobDetailsPanel">
                <div class="empty-state" id="emptyState">
                    <i class="fas fa-clipboard-list empty-icon"></i>
                    <h2>No Job Selected</h2>
                    <p>Click on a job offer from the list to view its details</p>
                </div>
                <% if (jobs && jobs.length > 0) { %>
                    <% jobs.forEach(job => { %>
                        <div class="job-details-content" data-id="<%= job._id %>">
                            <div class="details-header">
                                <div class="details-header-left">
                                    <h2><%= job.projectName || 'Untitled Project' %></h2>
                                    <span class="job-type interior"><%= job.roomType || 'Interior' %></span>
                                    <p class="job-budget"><%= job.budget || 'Budget not specified' %></p>
                                </div>
                                <div class="details-header-right">
                                    <p class="detail-label">Posted On</p>
                                    <p class="detail-value"><%= job.createdAt ? new Date(job.createdAt).toLocaleDateString() : 'N/A' %></p>
                                </div>
                            </div>
                            <div class="details-section">
                                <h3><i class="fas fa-user"></i> Customer Details</h3>
                                <div class="details-grid">
                                    <div class="detail-item">
                                        <p class="detail-label">Name</p>
                                        <p class="detail-value"><%= job.customerId?.name || job.fullName || 'Anonymous' %></p>
                                    </div>
                                    <div class="detail-item">
                                        <p class="detail-label">Contact</p>
                                        <p class="detail-value"><%= job.customerId?.phone || job.phone || 'N/A' %></p>
                                    </div>
                                    <div class="detail-item">
                                        <p class="detail-label">Email</p>
                                        <p class="detail-value"><%= job.customerId?.email || job.email || 'N/A' %></p>
                                    </div>
                                    <div class="detail-item">
                                        <p class="detail-label">Address</p>
                                        <p class="detail-value"><%= job.address || 'N/A' %></p>
                                    </div>
                                </div>
                            </div>
                            <div class="details-section">
                                <h3><i class="fas fa-home"></i> Room Information</h3>
                                <div class="details-grid">
                                    <div class="detail-item">
                                        <p class="detail-label">Room Type</p>
                                        <p class="detail-value"><%= job.roomType || 'N/A' %></p>
                                    </div>
                                    <div class="detail-item">
                                        <p class="detail-label">Size</p>
                                        <p class="detail-value"><%= job.roomSize ? `${job.roomSize.length} × ${job.roomSize.width} ${job.roomSize.unit}` : 'N/A' %></p>
                                    </div>
                                    <div class="detail-item">
                                        <p class="detail-label">Ceiling Height</p>
                                        <p class="detail-value"><%= job.ceilingHeight ? `${job.ceilingHeight.height} ${job.ceilingHeight.unit}` : 'N/A' %></p>
                                    </div>
                                    <div class="detail-item">
                                        <p class="detail-label">Preferred Style</p>
                                        <p class="detail-value"><%= job.designPreference || 'N/A' %></p>
                                    </div>
                                </div>
                                <% if (job.projectDescription) { %>
                                    <div class="special-features">
                                        <p class="detail-label">Special Features</p>
                                        <p class="detail-value"><%= job.projectDescription %></p>
                                    </div>
                                <% } %>
                            </div>
                            <% if (job.inspirationImages && job.inspirationImages.length > 0) { %>
                                <div class="details-section">
                                    <h3><i class="fas fa-images"></i> Inspiration Images</h3>
                                    <div class="reference-images">
                                        <% job.inspirationImages.forEach(image => { %>
                                            <div class="reference-image" style="background-image: url('<%= image %>')"></div>
                                        <% }); %>
                                    </div>
                                </div>
                            <% } %>
                            <% if (job.status !== 'accepted' && job.status !== 'rejected') { %>
                                <div class="job-action-buttons">
                                    <button class="job-action-button accept-button" data-type="interior" data-id="<%= job._id %>">
                                        <i class="fas fa-check"></i> Accept Job
                                    </button>
                                    <button class="job-action-button deny-button" data-type="interior" data-id="<%= job._id %>">
                                        <i class="fas fa-times"></i> Deny Job
                                    </button>
                                </div>
                            <% } %>
                        </div>
                    <% }); %>
                <% } %>
            </section>
        </div>
    </main>

    <script>
        // DOM elements
        const jobListContainer = document.getElementById('jobList');
        const jobDetailsPanel = document.getElementById('jobDetailsPanel');
        const emptyState = document.getElementById('emptyState');

        // Show job details
        function showJobDetails(jobId) {
            // Update active state of job cards
            document.querySelectorAll('.job-card').forEach(card => {
                card.classList.toggle('active', card.dataset.id === jobId);
            });

            // Hide empty state and all job details
            emptyState.style.display = 'none';
            document.querySelectorAll('.job-details-content').forEach(content => {
                content.classList.remove('active');
            });

            // Show selected job details
            const selectedJob = document.querySelector(`.job-details-content[data-id="${jobId}"]`);
            if (selectedJob) {
                selectedJob.classList.add('active');
                
                // Get job title from the selected job details
                const jobTitle = selectedJob.querySelector('.details-header-left h2').textContent;

                // Add event listeners to action buttons
                const acceptButton = selectedJob.querySelector('.accept-button');
                const denyButton = selectedJob.querySelector('.deny-button');

                if (acceptButton && denyButton) {
                    // Remove existing listeners to prevent duplicates
                    const newAcceptButton = acceptButton.cloneNode(true);
                    const newDenyButton = denyButton.cloneNode(true);
                    acceptButton.replaceWith(newAcceptButton);
                    denyButton.replaceWith(newDenyButton);

                    newAcceptButton.addEventListener('click', async () => {
                        const type = newAcceptButton.getAttribute('data-type');
                        const id = newAcceptButton.getAttribute('data-id');
                        if (confirm(`Are you sure you want to accept the offer for "${jobTitle}"?`)) {
                            try {
                                const response = await fetch(`/accept-job/${type}/${id}`, {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' }
                                });
                                const result = await response.json();
                                if (result.success) {
                                    alert(`Congratulations! You have accepted the offer for "${jobTitle}".`);
                                    location.reload();
                                } else {
                                    alert(`Error: ${result.error}`);
                                }
                            } catch (error) {
                                alert('An error occurred while accepting the offer.');
                            }
                        }
                    });

                    newDenyButton.addEventListener('click', async () => {
                        const type = newDenyButton.getAttribute('data-type');
                        const id = newDenyButton.getAttribute('data-id');
                        if (confirm(`Are you sure you want to decline the offer for "${jobTitle}"?`)) {
                            try {
                                const response = await fetch(`/reject-job/${type}/${id}`, {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' }
                                });
                                const result = await response.json();
                                if (result.success) {
                                    alert(`Offer for "${jobTitle}" declined. The client has been notified.`);
                                    location.reload();
                                } else {
                                    alert(`Error: ${result.error}`);
                                }
                            } catch (error) {
                                alert('An error occurred while rejecting the offer.');
                            }
                        }
                    });
                }
            }
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', () => {
            // Add click event listeners to job cards
            document.querySelectorAll('.job-card').forEach(card => {
                card.addEventListener('click', () => showJobDetails(card.dataset.id));
            });

            // Show empty state initially if no jobs
            <% if (!jobs || jobs.length === 0) { %>
                emptyState.style.display = 'flex';
            <% } else { %>
                // Show first job details by default
                const firstJobCard = document.querySelector('.job-card');
                if (firstJobCard) {
                    showJobDetails(firstJobCard.dataset.id);
                }
            <% } %>

            // Search functionality
            document.getElementById('searchInput').addEventListener('input', (e) => {
                const searchTerm = e.target.value.toLowerCase();
                document.querySelectorAll('.job-card').forEach(card => {
                    const title = card.querySelector('.job-title').textContent.toLowerCase();
                    const summary = card.querySelector('.job-summary').textContent.toLowerCase();
                    card.style.display = (title.includes(searchTerm) || summary.includes(searchTerm)) ? 'block' : 'none';
                });
            });
        });
    </script>
</body>
</html>